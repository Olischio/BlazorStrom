@page "/turbines"
@inject HttpClient Http
@using Blazorise

<PageTitle>Turbine State</PageTitle>

<h1>Turbine State</h1>

@if (Turbines == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>ID</th>
                <th>Capacity Usage</th>
                <th>Exact Percentage</th>

            </tr>
        </thead>
        <tbody>

            @{
                int teller = 0;

                foreach (var turbine in Turbines)
                {
                    teller++;
                    var turbintekst = $"Turbin {teller}";
                    var color = colorfunction(turbine.CapacityUsage);   
                 
                    var linkURL = $"turbine/{turbine.Id}/{turbine.CapacityUsage}/{turbintekst}";
                        <tr>
                            <td>
                                <NavLink href="@linkURL">@turbintekst</NavLink>
                            </td>
                            <td>



                                <Progress>
                                    <ProgressBar Color="@color" Value="@System.Convert.ToInt32(turbine.CapacityUsage * 100)"/>
                                </Progress>

                            </td>
                            <td>
                                @System.Math.Round(turbine.CapacityUsage * 100,2) 
                            </td>
                        </tr>
                }

            }


        </tbody>
    </table>

    <CurrentComponent></CurrentComponent>


}



@code {
    private Turbine[]? Turbines;

    protected override async Task OnInitializedAsync()
    {
        var url = "/api/Turbines";

        Turbines = await Http.GetFromJsonAsync<Turbine[]>(url);
    }

    public class Turbine
    {
        public string? Id { get; set; }

        public double CapacityUsage { get; set; }
    }

    private Color colorfunction(double value)
    {
        value = value * 100;

        if (value <=50 )
        {
            return Color.Success;
        }
        else if(value > 50 && value < 80)
        {
            return Color.Warning;
        }
        return Color.Danger;

        
    }
}

